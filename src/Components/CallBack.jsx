// CallBack.jsx
import './CallBack.css';
import { useState } from "react";


export default function CallBack() {


  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [isSubmitted, setIsSubmitted] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // const botToken = "7854407106:AAHIdQlFlNplJcFENxw5z78sfWQhPyTMI0k";
    const botToken = "7931813918:AAFqMdgRv_0WTPMuptl9zy-Yw9tTE5DzEYU";

    const chatId = "458204664";
    const text = `üìû *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*\n–ò–º—è: ${name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`;

    try {
      await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: chatId,
          text: text,
          parse_mode: "Markdown",
        }),
      });
      setIsSubmitted(true);
      setName("");
      setPhone("");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      alert("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }

  };


  return (
    <div className='callback'>
      


              <h2>–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</h2>
              {isSubmitted ? (
                <p className="success-message">–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–∫–æ—Ä–æ –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º.</p>
              ) : (
                <form onSubmit={handleSubmit}>
                  <div className="form-group">
                    <input
                      type="text"
                      value={name}
                      onChange={(e) => setName(e.target.value)}
                      placeholder="–í–∞—à–µ –∏–º—è"
                      required
                    />
                  </div>
                  <div className="form-group">
                    <input
                      type="tel"
                      value={phone}
                      onChange={(e) => setPhone(e.target.value)}
                      placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω"
                      required
                    />
                  </div>
                  <button type="submit" className="submit-btn">
                    –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫
                  </button>
                </form>
              )}
            

    </div>
  );
}